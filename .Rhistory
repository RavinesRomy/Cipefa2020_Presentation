figPath = "~/GitHub/Cipefa_2020/Presentation/imgs/mask.png"
wordcloud2(datos, figPath = figPath, size = 1.5,color = "skyblue")
figPath = "~/GitHub/Cipefa_2020/Presentation/imgs/mask2.png"
wordcloud2(datos, figPath = figPath, size = 1.5,color = "skyblue")
wordcloud2(datos, figPath = figPath, size = 1.5)
datos
wordcloud2(datos, figPath = figPath, size = 1.5,color = "skyblue")
figPath = "~/GitHub/Cipefa_2020/Presentation/imgs/mask.png"
wordcloud2(datos, figPath = figPath, size = 1.5,color = "skyblue")
figPath = "~/GitHub/Cipefa_2020/Presentation/imgs/mask3.png"
wordcloud2(datos, figPath = figPath, size = 1.5,color = "skyblue")
render::wordcloud2(datos, figPath = figPath, size = 1.5,color = "skyblue")
wc_gracias<-wordcloud2(datos, size = 0.7, shape = 'circle',ellipticity = 0.65,backgroundColor = "#E9E7DA")
wc_gracias
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "circle",backgroundColor = "#E9E7DA")
wc_gracias
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "triangle-forward",backgroundColor = "#E9E7DA")
wc_gracias
datos=data.frame(
word=c(rep("Gracias",50)),
freq=c(rpois(50,7))
)
wordcloud2(datos,shape = 'circle')
datos=data.frame(
word=c(rep("Gracias",5000)),
freq=c(rpois(50,1))
)
datos=data.frame(
word=c(rep("Gracias",5000)),
freq=c(rpois(5000,1))
)
wordcloud2(datos,shape = 'circle')
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "triangle-forward",backgroundColor = "#E9E7DA")
wc_gracias
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "triangle-forward",backgroundColor = "#E9E7DA")
wc_gracias
datos=data.frame(
word=c(rep("Gracias",50)),
freq=c(rpois(50,1))
)
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "triangle-forward",backgroundColor = "#E9E7DA")
wc_gracias
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "circle",backgroundColor = "#E9E7DA")
wc_gracias
triangle-forward
wc_gracias<-wordcloud2(datos, size = 0.7, shape = "triangle-forward",backgroundColor = "#E9E7DA")
wc_gracias
htmlwidgets::saveWidget(wc_gracias,'wc_gracias.html',selfcontained = F)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds "clustering_results/predictive_word.rds"
textos = readRDS(file = paste0(pathout,filerds))
#head(textos)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds "clustering_results/predictive_word.rds"
textos = readRDS(file = paste0(pathout,filerds))
#head(textos)
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds "clustering_results/predictive_word.rds"
filerds = "clustering_results/predictive_word.rds"
paste0(pathout,filerds)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_reults/predictive_word.rds"
result_01 = readRDS(file = paste0(pathout,filerds))
#head(textos)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_results/predictive_word.rds"
result_01 = readRDS(file = paste0(pathout,filerds))
#head(textos)
result_01[which(result_01$class==2),]
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(scales)
library(lubridate)
library(ggplot2)
library(timevis)
library(widgetframe)
library(png)
aa<-result_01[which(result_01$class==2),][1:20,c("column","probability")]
kable(aa)
dimnames(aa)<-c(NULL,c("Word","Probability"))
aa<-result_01[which(result_01$class==2),][1:20,c("column","probability")]
dimnames(aa)<-c(NULL,c("Word","Probability"))
is.data.frame(aa)
aa<-result_01[which(result_01$class==2),][1:20,c("column","probability")]
dimnames(aa)<-c(NULL,c("Word","Probability"))
names(aa)=c("Word","Probability"))
names(aa)=c("Word","Probability")
kable(aa,row.names = FALSE)
setwd("~/GitHub/Cipefa_2020/Presentation")
aa<-result_01[which(result_01$class==2), c("column","probability")]
aa
unlink('Pruebas_cache', recursive = TRUE)
kbl(prediccion)
background_1 = paste0(ifelse(prediccion$A > 0.50, "grey", "lightblue")
)
background_1 = paste0(ifelse(prediccion$A > 0.50, "grey", "lightblue"))
background_1 = "ifelse(prediccion$A > 0.50, "grey", "lightblue")"
paste("ifelse(prediccion$A > 0.50"," "grey" ", " lightblue" "", sep=",")
prediccion = data.frame(Incluye=palabras,
A=predice[,1],
B=predice[,3], C=predice[,3],
D=predice[,4], E=predice[,5])
library(mixdir)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_results/clustering.rds"
clustering1 = readRDS(file = paste0(pathout,filerds))
#head(textos)
palabras = c("columna",
"golpe",
"golpeo + columna",
"columna + roce",
"intento",
"estacionamiento",
"tentativa + robo",
"intento + robo",
"retrovisores + robo",
"rotura",
"rotura + lunas",
"granizo",
"granizos",
"daños + granizos",
"daños + granizada",
"motocicleta",
"golpeo + motocicleta + estacionamiento",
"salir + garaje + encuentro",
"stop",
"ceda + peaton + paro")
aux=c(
predict(clustering1, c("columna"=1)),
predict(clustering1, c("golpe"=1)),
predict(clustering1, c("golpeo"=1, "columna"=1)),
predict(clustering1, c("columna"=1,"roce"=1)),
predict(clustering1, c("intento"=1)),
predict(clustering1, c("estacionamiento"=1)),
predict(clustering1, c("tentativa"=1,"robo"=1)),
predict(clustering1, c("intento"=1,"robo"=1)),
predict(clustering1, c("retrovisores"=1,"robo"=1)),
predict(clustering1, c("rotura"=1)),
predict(clustering1, c("rotura"=1,"lunas"=1)),
predict(clustering1, c("granizo"=1)),
predict(clustering1, c("granizos"=1)),
predict(clustering1, c("daños"=1,"granizos"=1)),
predict(clustering1, c("daños"=1,"granizada"=1)),
predict(clustering1, c("motocicleta"=1)),
predict(clustering1, c("golpeo"=1,"motocicleta"=1,"estacionamiento"=1)),
predict(clustering1, c("salir"=1,"garaje"=1,"encuentro"=1)),
predict(clustering1, c("stop"=1)),
predict(clustering1, c("ceda"=1,"peaton"=1,"paro"=1))
)
predice = round(matrix(aux,ncol=5,byrow=T),3)
prediccion = data.frame(Incluye=palabras,
A=predice[,1],
B=predice[,3], C=predice[,3],
D=predice[,4], E=predice[,5])
#background_1 = paste("ifelse(prediccion$A > 0.50, "grey" , " lightblue" )
dim(prediccion)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_results/clustering.rds"
clustering1 = readRDS(file = paste0(pathout,filerds))
palabras = c("columna",
"golpe",
"golpeo + columna",
"columna + roce",
"intento",
"estacionamiento",
"tentativa + robo",
"intento + robo",
"retrovisores + robo",
"rotura",
"rotura + lunas",
"granizo",
"granizos",
"daños + granizos",
"daños + granizada",
"motocicleta",
"golpeo + motocicleta + estacionamiento",
"salir + garaje + encuentro",
"stop",
"ceda + peaton + paro")
predict(clustering1, c("columna"=1)
)
predice = matrix(aux,ncol=5,byrow=T)
prediccion = data.frame(Incluye=palabras,
A=predice[,1],
B=predice[,3], C=predice[,3],
D=predice[,4], E=predice[,5])
knitr::kable(prediccion[1:10,]) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T, border_right = F) %>%
column_spec(2, background = ifelse(prediccion$A[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$A[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$A[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(3, background = ifelse(prediccion$B[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$B[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$B[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(4, background = ifelse(prediccion$C[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$C[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$C[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(5, background = ifelse(prediccion$D[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$D[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$D[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(6, background = ifelse(prediccion$E[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$E[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$E[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
kable_paper("hover", full_width = F) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size =16)
knitr::kable(prediccion[1:10,],digits =3) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T, border_right = F) %>%
column_spec(2, background = ifelse(prediccion$A[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$A[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$A[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(3, background = ifelse(prediccion$B[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$B[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$B[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(4, background = ifelse(prediccion$C[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$C[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$C[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(5, background = ifelse(prediccion$D[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$D[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$D[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
column_spec(6, background = ifelse(prediccion$E[1:10]>0.80, "rgb(202, 207, 210)",
ifelse(prediccion$E[1:10]>0.40, "rgb(229, 231, 233)",
ifelse(prediccion$E[1:10]>0.20, "rgb(242, 243, 244)",
"rgb(248, 249, 249)")))) %>%
kable_paper("hover", full_width = F) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size =16)
prediccion
head(prediccion)
predice = matrix(aux,ncol=5,byrow=T)
prediccion = data.frame(Incluye=palabras,
A=predice[,1],
B=predice[,3], C=predice[,3],
D=predice[,4], E=predice[,5])
head(prediccion)
head(prediccion)
library(mixdir)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_results/clustering.rds"
clustering1 = readRDS(file = paste0(pathout,filerds))
palabras = c("columna",
"golpe",
"golpeo + columna",
"columna + roce",
"intento",
"estacionamiento",
"tentativa + robo",
"intento + robo",
"retrovisores + robo",
"rotura",
"rotura + lunas",
"granizo",
"granizos",
"daños + granizos",
"daños + granizada",
"motocicleta",
"golpeo + motocicleta + estacionamiento",
"salir + garaje + encuentro",
"stop",
"ceda + peaton + paro")
aux=c(
predict(clustering1, c("columna"=1)),
predict(clustering1, c("golpe"=1)),
predict(clustering1, c("golpeo"=1, "columna"=1)),
predict(clustering1, c("columna"=1,"roce"=1)),
predict(clustering1, c("intento"=1)),
predict(clustering1, c("estacionamiento"=1)),
predict(clustering1, c("tentativa"=1,"robo"=1)),
predict(clustering1, c("intento"=1,"robo"=1)),
predict(clustering1, c("retrovisores"=1,"robo"=1)),
predict(clustering1, c("rotura"=1)),
predict(clustering1, c("rotura"=1,"lunas"=1)),
predict(clustering1, c("granizo"=1)),
predict(clustering1, c("granizos"=1)),
predict(clustering1, c("daños"=1,"granizos"=1)),
predict(clustering1, c("daños"=1,"granizada"=1)),
predict(clustering1, c("motocicleta"=1)),
predict(clustering1, c("golpeo"=1,"motocicleta"=1,"estacionamiento"=1)),
predict(clustering1, c("salir"=1,"garaje"=1,"encuentro"=1)),
predict(clustering1, c("stop"=1)),
predict(clustering1, c("ceda"=1,"peaton"=1,"paro"=1))
)
predice = matrix(aux,ncol=5,byrow=T)
prediccion = data.frame(Incluye=palabras,
A=predice[,1],
B=predice[,3], C=predice[,3],
D=predice[,4], E=predice[,5])
head(prediccion)
head(prediccion)
# Restore the object
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_results/clustering.rds"
clustering1 = readRDS(file = paste0(pathout,filerds))
palabras = c("columna",
"golpe",
"golpeo + columna",
"columna + roce",
"intento",
"estacionamiento",
"tentativa + robo",
"intento + robo",
"retrovisores + robo",
"rotura",
"rotura + lunas",
"granizo",
"granizos",
"daños + granizos",
"daños + granizada",
"motocicleta",
"golpeo + motocicleta + estacionamiento",
"salir + garaje + encuentro",
"stop",
"ceda + peaton + paro")
aux=c(
predict(clustering1, c("columna"=1)),
predict(clustering1, c("golpe"=1)),
predict(clustering1, c("golpeo"=1, "columna"=1)),
predict(clustering1, c("columna"=1,"roce"=1)),
predict(clustering1, c("intento"=1)),
predict(clustering1, c("estacionamiento"=1)),
predict(clustering1, c("tentativa"=1,"robo"=1)),
predict(clustering1, c("intento"=1,"robo"=1)),
predict(clustering1, c("retrovisores"=1,"robo"=1)),
predict(clustering1, c("rotura"=1)),
predict(clustering1, c("rotura"=1,"lunas"=1)),
predict(clustering1, c("granizo"=1)),
predict(clustering1, c("granizos"=1)),
predict(clustering1, c("daños"=1,"granizos"=1)),
predict(clustering1, c("daños"=1,"granizada"=1)),
predict(clustering1, c("motocicleta"=1)),
predict(clustering1, c("golpeo"=1,"motocicleta"=1,"estacionamiento"=1)),
predict(clustering1, c("salir"=1,"garaje"=1,"encuentro"=1)),
predict(clustering1, c("stop"=1)),
predict(clustering1, c("ceda"=1,"peaton"=1,"paro"=1))
)
aux=c(
predict(clustering1, c("columna"=1)),
predict(clustering1, c("golpe"=1)),
predict(clustering1, c("golpeo"=1, "columna"=1)),
predict(clustering1, c("columna"=1,"roce"=1)),
predict(clustering1, c("intento"=1)),
predict(clustering1, c("estacionamiento"=1)),
predict(clustering1, c("tentativa"=1,"robo"=1)),
predict(clustering1, c("intento"=1,"robo"=1)),
predict(clustering1, c("retrovisores"=1,"robo"=1)),
predict(clustering1, c("rotura"=1)),
predict(clustering1, c("rotura"=1,"lunas"=1)),
predict(clustering1, c("granizo"=1)),
predict(clustering1, c("granizos"=1)),
predict(clustering1, c("daños"=1,"granizos"=1)),
predict(clustering1, c("daños"=1,"granizada"=1)),
predict(clustering1, c("motocicleta"=1)),
predict(clustering1, c("golpeo"=1,"motocicleta"=1,"estacionamiento"=1)),
predict(clustering1, c("salir"=1,"garaje"=1,"encuentro"=1)),
predict(clustering1, c("stop"=1)),
predict(clustering1, c("ceda"=1,"peaton"=1,"paro"=1))
)
predice = matrix(aux,ncol=5,byrow=T)
predice = matrix(aux,ncol=5,byrow=T)
prediccion = data.frame(Incluye=palabras,
A=predice[,1],
B=predice[,3], C=predice[,3],
D=predice[,4], E=predice[,5])
head(prediccion)
head(prediccion)
pathout="~/GitHub/Cipefa_2020/Siniestros_MixDir/output/"
filerds = "clustering_results/clustering.rds"
clustering1 = readRDS(file = paste0(pathout,filerds))
palabras = c("columna",
"golpe",
"golpeo + columna",
"columna + roce",
"intento",
"estacionamiento",
"tentativa + robo",
"intento + robo",
"retrovisores + robo",
"rotura",
"rotura + lunas",
"granizo",
"granizos",
"daños + granizos",
"daños + granizada",
"motocicleta",
"golpeo + motocicleta + estacionamiento",
"salir + garaje + encuentro",
"stop",
"ceda + peaton + paro")
library(mixdir)
set.seed(675)
predict(clustering1, c("columna"=1))
predict(clustering1, c("golpe"=1))
aux=c(
predict(clustering1, c("columna"=1)),
predict(clustering1, c("golpe"=1)),
predict(clustering1, c("golpeo"=1, "columna"=1)),
predict(clustering1, c("columna"=1,"roce"=1)),
predict(clustering1, c("intento"=1)),
predict(clustering1, c("estacionamiento"=1)),
predict(clustering1, c("tentativa"=1,"robo"=1)),
predict(clustering1, c("intento"=1,"robo"=1)),
predict(clustering1, c("retrovisores"=1,"robo"=1)),
predict(clustering1, c("rotura"=1)),
predict(clustering1, c("rotura"=1,"lunas"=1)),
predict(clustering1, c("granizo"=1)),
predict(clustering1, c("granizos"=1)),
predict(clustering1, c("daños"=1,"granizos"=1)),
predict(clustering1, c("daños"=1,"granizada"=1)),
predict(clustering1, c("motocicleta"=1)),
predict(clustering1, c("golpeo"=1,"motocicleta"=1,"estacionamiento"=1)),
predict(clustering1, c("salir"=1,"garaje"=1,"encuentro"=1)),
predict(clustering1, c("stop"=1)),
predict(clustering1, c("ceda"=1,"peaton"=1,"paro"=1))
)
aux[1:5]
datos=data.frame(
word=c(rep("Gracias",50)),
freq=c(rpois(50,5))
)
wordcloud2(datos,shape = 'circle')
datos=data.frame(
word=c(rep("Gracias",50)),
freq=c(rpois(50,5))
)
wordcloud2(datos,shape = "triangle-forward")
wordcloud2::wordcloud2(datos,shape = "triangle-forward")
wordcloud2::wordcloud2(datos,shape = "triangle-forward", size=0.5)
datos=data.frame(
word=c(rep("Gracias",50)),
freq=c(rpois(50,15))
)
wordcloud2::wordcloud2(datos,shape = "triangle-forward", size=0.5)
datos=data.frame(
word=c(rep("Gracias",50)),
freq=c(rpois(50,1))
)
wordcloud2::wordcloud2(datos,shape = "triangle-forward", size=0.5)
wordcloud2::wordcloud2(datos,shape = "triangle-forward", size = 1.5, color = "skyblue")
wordcloud2:letterCloud( datos, word = "R", color='random-light' , backgroundColor="black")
head(demoFreq)
wordcloud2::wordcloud2(demoFreq,shape = "triangle-forward", size = 1.5, color = "skyblue")
dim(demoFreq)
dim(demoFreqC)
head(demoFreqC)
demoFreqGracias=demoFreq
demoFreqGracias$word="Gracias"
wordcloud2::wordcloud2(demoFreq,shape = "triangle-forward", size = 1.5, color = "skyblue")
wordcloud2::wordcloud2(demoFreqGracias,shape = "triangle-forward", size = 1.5, color = "skyblue")
wordcloud2::wordcloud2(demoFreqGracias,shape = "circle", size = 1.5, color = "skyblue")
wordcloud2::wordcloud2(demoFreqGracias,shape = "cardioid", size = 1.5, color = "skyblue")
wordcloud2::wordcloud2(demoFreqGracias,shape = "diamond", size = 1.5, color = "skyblue")
wordcloud2::wordcloud2(demoFreqGracias,shape = "pentagon", size = 1.5, color = "skyblue")
wordcloud2::wordcloud2(demoFreqGracias,shape = "pentagon", size = 1.5,  color=rep_len( c("green","blue"), nrow(demoFreqGracias) ) )
wordcloud2::wordcloud2(demoFreqGracias,
shape = "pentagon",
size = 1.5,
color=rep_len( c("#41541e","blue"), nrow(demoFreqGracias) ) )
wordcloud2::wordcloud2(demoFreqGracias,
shape = "pentagon",
size = 1.5,
color=rep_len( c("#41541e","#E9E7DA","#903163","#¿4d1434"), nrow(demoFreqGracias) ) )
wordcloud2::wordcloud2(demoFreqGracias,
shape = "pentagon",
size = 1.5,
color=rep_len( c("#41541e","#C19434","#903163","#4d1434"), nrow(demoFreqGracias) ) )
wordcloud2::wordcloud2(demoFreqGracias,
shape = "pentagon",
size = 1.5,
color=rep_len( c("#41541e","#C19434","#903163","#4d1434"), nrow(demoFreqGracias) ) )
wc_gracias
wc_gracias<-wordcloud2::wordcloud2(demoFreqGracias,
shape = "pentagon",
size = 1.5,
color=rep_len( c("#41541e","#C19434","#903163","#4d1434"),
nrow(demoFreqGracias) ),
backgroundColor = "#E9E7DA")
wc_gracias
wc_gracias
htmlwidgets::saveWidget(wc_gracias,'~/GitHub/Cipefa_2020/Presentation/charts/wc_gracias.html',selfcontained = F)
htmlwidgets::saveWidget(wc_gracias,'~/GitHub/Cipefa_2020/Presentation/charts/wc_gracias.html',selfcontained = F)
wc_gracias
install.packages("remotes")
remotes::install_github("rstudio/fontawesome")
?fa
wc_gracias<-wordcloud2::wordcloud2(demoFreqGracias,
shape = "circle",
size = 1.5,
color=rep_len( c("#41541e","#C19434","#903163","#4d1434"),
nrow(demoFreqGracias) ),
backgroundColor = "#E9E7DA")
wc_gracias
htmlwidgets::saveWidget(wc_gracias,'~/GitHub/Cipefa_2020/Presentation/charts/wc_gracias.html',selfcontained = F)
wc_gracias
unlink('Cipefa2020_RomyRodriguez_cache', recursive = TRUE)
